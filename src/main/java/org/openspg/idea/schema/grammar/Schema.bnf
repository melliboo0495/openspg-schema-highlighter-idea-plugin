{
    parserClass="org.openspg.idea.lang.parser.SchemaParser"
    parserUtilClass="org.openspg.idea.schema.grammar.SchemaParserUtil"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Schema"
    psiImplClassSuffix="Impl"
    psiPackage="org.openspg.idea.lang.psi"
    psiImplPackage="org.openspg.idea.lang.psi.impl"

    elementTypeHolderClass="org.openspg.idea.grammar.psi.SchemaTypes"
    elementTypeClass="org.openspg.idea.schema.SchemaElementType"
    tokenTypeClass="org.openspg.idea.schema.psi.SchemaTokenType"

    psiImplUtilClass="org.openspg.idea.schema.psi.impl.SchemaPsiImplUtil"
}

schemaFile ::= item_*

private item_ ::= namespace|entity|DOCUMENT_END|COMMENT|LINE_COMMENT|indent_|EOL|TEXT

private indent_ ::= INDENT|INDENT_META|INDENT_PROP|INDENT_PROPMETA|INDENT_SUBPROP|INDENT_SUBPROPMETA

plain_text ::= (OPEN_PLAIN_BLOCK (TEXT|EOL)* CLOSE_PLAIN_BLOCK)
private text_value ::= TEXT|plain_text
private EOL_ ::= (indent_)* EOL

namespace ::= NAMESPACE_MARKER TEXT EOL_ {
    methods=[getValue toJson]
}

entity ::= entity_info EOL_* entity_meta* {
    methods=[getName toJson]
}

entity_info ::= referencable_entity_name OPEN_BRACKET ENTITY_ALIAS_NAME CLOSE_BRACKET (basedEntityClass_|inheritedEntityClass_) {
    mixin="org.openspg.idea.schema.psi.impl.SchemaNamedElementImpl"
    implements="org.openspg.idea.schema.psi.SchemaNamedElement"
    methods=[getEntityName getEntityAliasName getEntityClassList getName setName getNameIdentifier]
}
private basedEntityClass_ ::= COLON ENTITY_BUILTIN_CLASS
private inheritedEntityClass_ ::= INHERITED (referencable_entity_class COMMA)* (referencable_entity_class) COLON

referencable_entity_name ::= ENTITY_NAME {
    methods=[getReference]
}

referencable_entity_class ::= ENTITY_BUILTIN_CLASS|ENTITY_CLASS {
    methods=[getReference]
}

entity_meta ::= entity_meta_info EOL_* property* {
    methods=[toJson]
}

entity_meta_info ::= INDENT_META META_TYPE COLON (BUILTIN_TYPE|text_value*)? {
    methods=[getName getValue]
}

property ::= property_info EOL_* (property_meta EOL_*)* {
    methods=[toJson]
}
property_info ::= (INDENT_PROP PROPERTY_NAME OPEN_BRACKET PROPERTY_ALIAS_NAME CLOSE_BRACKET COLON multiPropertyClass_) {
    methods=[getPropertyName getPropertyAliasName getPropertyClassList]
}
referencable_property_class ::= (BUILTIN_TYPE | PROPERTY_CLASS) {
    methods=[getReference]
}
private multiPropertyClass_ ::= (referencable_property_class COMMA)* referencable_property_class

property_meta ::= property_meta_info EOL_* (sub_property)* {
    methods=[toJson]
}
property_meta_info ::= INDENT_PROPMETA META_TYPE COLON (BUILTIN_TYPE | text_value)* {
    methods=[getName getValue]
}

sub_property ::= sub_property_info EOL_* (sub_property_meta EOL_*)* {
    methods=[toJson]
}
sub_property_info ::= (INDENT_SUBPROP PROPERTY_NAME OPEN_BRACKET PROPERTY_ALIAS_NAME CLOSE_BRACKET COLON multiPropertyClass_) {
    methods=[getPropertyName getPropertyAliasName getPropertyClassList]
}
sub_property_meta ::= (INDENT_SUBPROPMETA META_TYPE COLON (text_value | BUILTIN_TYPE)*) {
    methods=[getName getValue toJson]
}
